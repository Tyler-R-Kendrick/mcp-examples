#region: def
---
openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
tags:
- name: actions
  description: Endpoints to manage GitHub Actions using the REST API.
- name: activity
  description: Activity APIs provide access to notifications, subscriptions, and timelines.
- name: apps
  description: Information for integrations and installations.
- name: billing
  description: Monitor charges and usage from Actions and Packages.
- name: checks
  description: Rich interactions with checks run by your integrations.
- name: code-scanning
  description: Retrieve code scanning alerts from a repository.
- name: codes-of-conduct
  description: Insight into codes of conduct for your communities.
- name: emojis
  description: List emojis available to use on GitHub.
- name: dependabot
  description: Endpoints to manage Dependabot.
- name: dependency-graph
  description: Endpoints to access Dependency Graph features.
- name: gists
  description: View, modify your gists.
- name: git
  description: Raw Git functionality.
- name: gitignore
  description: View gitignore templates
- name: issues
  description: Interact with GitHub Issues.
- name: licenses
  description: View various OSS licenses.
- name: markdown
  description: Render GitHub flavored markdown
- name: merge-queue
  description: Interact with GitHub Merge Queues.
- name: meta
  description: Endpoints that give information about the API.
- name: migrations
  description: Move projects to or from GitHub.
- name: oidc
  description: Endpoints to manage GitHub OIDC configuration using the REST API.
- name: orgs
  description: Interact with GitHub Orgs.
- name: packages
  description: Manage packages for authenticated users and organizations.
- name: projects
  description: Interact with GitHub Projects.
- name: pulls
  description: Interact with GitHub Pull Requests.
- name: rate-limit
  description: Check your current rate limit status
- name: reactions
  description: Interact with reactions to various GitHub entities.
- name: repos
  description: Interact with GitHub Repos.
- name: search
  description: Look for stuff on GitHub.
- name: secret-scanning
  description: Retrieve secret scanning alerts from a repository.
- name: teams
  description: Interact with GitHub Teams.
- name: users
  description: Interact with and view information about users and also current user.
- name: codespaces
  description: Endpoints to manage Codespaces using the REST API.
- name: copilot
  description: Endpoints to manage Copilot using the REST API.
- name: security-advisories
  description: Manage security advisories.
- name: interactions
  description: Owner or admin management of users interactions.
- name: classroom
  description: Interact with GitHub Classroom.
- name: desktop
  description: Desktop specific endpoints.
- name: enterprise-teams
  description: Endpoints to manage GitHub Enterprise Teams.
- name: code-security
  description: Endpoints to manage Code security using the REST API.
- name: private-registries
  description: Manage private registry configurations.
- name: hosted-compute
  description: Manage hosted compute networking resources.
- name: credentials
  description: Revoke compromised or leaked GitHub credentials.
- name: campaigns
  description: Endpoints to manage campaigns via the REST API.
servers:
- url: https://api.github.com
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  "/":
    get:
      summary: GitHub API Root
      description: Get Hypermedia links to resources accessible in GitHub's REST API
      tags:
      - meta
      operationId: meta/root
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/root"
              examples:
                default:
                  "$ref": "#/components/examples/root"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#github-api-root
  "/advisories":
    get:
      summary: List global security advisories
      description: |-
        Lists all global security advisories that match the specified parameters. If no other parameters are defined, the request will return only GitHub-reviewed advisories that are not malware.

        By default, all responses will exclude advisories for malware, because malware are not standard vulnerabilities. To list advisories for malware, you must include the `type` parameter in your request, with the value `malware`. For more information about the different types of security advisories, see "[About the GitHub Advisory database](https://docs.github.com/code-security/security-advisories/global-security-advisories/about-the-github-advisory-database#about-types-of-security-advisories)."
      tags:
      - security-advisories
      operationId: security-advisories/list-global-advisories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/security-advisories/global-advisories#list-global-security-advisories
      parameters:
      - name: ghsa_id
        in: query
        description: If specified, only advisories with this GHSA (GitHub Security
          Advisory) identifier will be returned.
        schema:
          type: string
      - name: type
        in: query
        description: If specified, only advisories of this type will be returned.
          By default, a request with no other parameters defined will only return
          reviewed advisories that are not malware.
        schema:
          type: string
          enum:
          - reviewed
          - malware
          - unreviewed
          default: reviewed
      - name: cve_id
        description: If specified, only advisories with this CVE (Common Vulnerabilities
          and Exposures) identifier will be returned.
        in: query
        schema:
          type: string
      - name: ecosystem
        in: query
        description: If specified, only advisories for these ecosystems will be returned.
        schema:
          "$ref": "#/components/schemas/security-advisory-ecosystems"
      - name: severity
        in: query
        description: If specified, only advisories with these severities will be returned.
        schema:
          type: string
          enum:
          - unknown
          - low
          - medium
          - high
          - critical
      - name: cwes
        in: query
        description: |-
          If specified, only advisories with these Common Weakness Enumerations (CWEs) will be returned.

          Example: `cwes=79,284,22` or `cwes[]=79&cwes[]=284&cwes[]=22`
        schema:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
      - name: is_withdrawn
        in: query
        description: Whether to only return advisories that have been withdrawn.
        schema:
          type: boolean
      - name: affects
        in: query
        description: |-
          If specified, only return advisories that affect any of `package` or `package@version`. A maximum of 1000 packages can be specified.
          If the query parameter causes the URL to exceed the maximum URL length supported by your client, you must specify fewer packages.

          Example: `affects=package1,package2@1.0.0,package3@^2.0.0` or `affects[]=package1&affects[]=package2@1.0.0`
        schema:
          oneOf:
          - type: string
          - type: array
            maxItems: 1000
            items:
              type: string
      - name: published
        in: query
        description: |-
          If specified, only return advisories that were published on a date or date range.

          For more information on the syntax of the date range, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
        schema:
          type: string
      - name: updated
        in: query
        description: |-
          If specified, only return advisories that were updated on a date or date range.

          For more information on the syntax of the date range, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
        schema:
          type: string
      - name: modified
        description: |-
          If specified, only show advisories that were updated or published on a date or date range.

          For more information on the syntax of the date range, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
        in: query
        schema:
          type: string
      - name: epss_percentage
        in: query
        description: |-
          If specified, only return advisories that have an EPSS percentage score that matches the provided value.
          The EPSS percentage represents the likelihood of a CVE being exploited.
        schema:
          type: string
      - name: epss_percentile
        in: query
        description: |-
          If specified, only return advisories that have an EPSS percentile score that matches the provided value.
          The EPSS percentile represents the relative rank of the CVE's likelihood of being exploited compared to other CVEs.
        schema:
          type: string
      - "$ref": "#/components/parameters/pagination-before"
      - "$ref": "#/components/parameters/pagination-after"
      - "$ref": "#/components/parameters/direction"
      - name: per_page
        description: The number of results per page (max 100). For more information,
          see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 30
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - updated
          - published
          - epss_percentage
          - epss_percentile
          default: published
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/global-advisory"
              examples:
                default:
                  "$ref": "#/components/examples/global-advisory-items"
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/basic-error"
        '422':
          "$ref": "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: security-advisories
        subcategory: global-advisories
#endregion